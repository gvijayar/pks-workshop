apiVersion: v1
kind: Secret
type: kubernetes.io/dockerconfigjson
metadata:
  name: docker-hub-creds
data:
  .dockerconfigjson: eyJhdXRocyI6eyJodHRwczovL2luZGV4LmRvY2tlci5pby92MS8iOnsidXNlcm5hbWUiOiJndmlqYXlhciIsInBhc3N3b3JkIjoiSXJpc2g5N34iLCJlbWFpbCI6Imd1bmF2QHBpdm90YWwuaW8iLCJhdXRoIjoiWjNacGFtRjVZWEk2U1hKcGMyZzVOMzQ9In19fQ==
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: geosearch-account
secrets:
- name: geosearch-account-token-gm844
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: elastic-search-config
data:
  es.cert: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
  es.cluster: myesdb
  es.discovery: elasticsearch
  es.http: "true"
  es.nodedata: "true"
  es.nodemaster: "true"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: elasticsearch
spec:
  replicas: 1
  selector:
    matchLabels:
      component: elasticsearch         
  template:
    metadata:
      labels:
        component: elasticsearch    
    spec:
      initContainers:
      - name: init-sysctl
        image: busybox
        imagePullPolicy: Always
        command: ["sysctl", "-w", "vm.max_map_count=262144"]
        securityContext:
          privileged: true
      containers:
      - name: elasticsearch
        securityContext:
          capabilities:
            add:
              - IPC_LOCK
        image: gvijayar/harbor-elasticsearch:1.0
        env:
        - name: KUBERNETES_CA_CERTIFICATE_FILE
          valueFrom:
            configMapKeyRef:
              name: elastic-search-config
              key: es.cert
              
        - name: "CLUSTER_NAME"
          valueFrom:
            configMapKeyRef:
              name: elastic-search-config
              key: es.cluster
        - name: "DISCOVERY_SERVICE"
          valueFrom:
            configMapKeyRef:
              name: elastic-search-config
              key: es.discovery
        - name: NODE_MASTER
          valueFrom:
            configMapKeyRef:
              name: elastic-search-config
              key: es.nodemaster
        - name: NODE_DATA
          valueFrom:
            configMapKeyRef:
              name: elastic-search-config
              key: es.nodedata
        - name: HTTP_ENABLE
          valueFrom:
            configMapKeyRef:
              name: elastic-search-config
              key: es.http
        ports:
        - containerPort: 9200
          name: http
          protocol: TCP
        - containerPort: 9300
          name: transport
          protocol: TCP
        volumeMounts:
        - mountPath: /usr/share/elasticsearch/data
          name: ci-data-es
      volumes:
        - name: ci-data-es
          emptyDir: {}
      serviceAccountName: geosearch-account     
---
apiVersion: v1
kind: Service
metadata:
  name: elasticsearch
  labels:
    component: elasticsearch
spec:
  type: NodePort
  selector:
    component: elasticsearch
  ports:
  - name: http
    port: 9200
    protocol: TCP
  - name: transport
    port: 9300
    protocol: TCP
---
apiVersion: batch/v1
kind: Job
metadata:
  name: esinitializer
spec:
  template:
    metadata:
      name: esinitializer
    spec:
      containers:
      - name: esinitializer
        image: gvijayar/es-init:latest
      initContainers:
      - name: init-myservice
        image: busybox
        command: ['sh', '-c', 'until nslookup elasticsearch; do echo waiting for elasticsearch; sleep 2; done;']        
      restartPolicy: Never
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: geosearch
spec:
  replicas: 1
  selector:
    matchLabels:
      app: geosearch
  template:
    metadata:
      labels:
        app: geosearch
    spec:
      initContainers:
      - name: init-myservice
        image: busybox
        command: ['sh', '-c', 'until nslookup elasticsearch; do echo waiting for elasticsearch; sleep 60; done;']     
      containers:
      - name: geosearch-app
        image: gvijayar/harbor-geosearch:4.0
        ports:
        - containerPort: 8080
      serviceAccountName: geosearch-account  
---
kind: Service
apiVersion: v1
metadata:
  name: geosearch-service
spec:
  selector:
    app: geosearch
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 8080
  type: LoadBalancer        
